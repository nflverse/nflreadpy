# Workflow derived from https://docs.astral.sh/uv/guides/integration/github/

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

name: Run CI tests

jobs:
  ci-check:
    runs-on: ${{ matrix.os }}

    name: ${{ matrix.os }} (${{ matrix.python-version }})

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "0.8.17"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Validate layered betting configuration
        run: uv run nflreadpy-betting validate-config --config config/betting.yaml

      - name: Validate production layered configuration
        run: |
          export NFLREADPY_BETTING_ENV=production
          export DRAFTKINGS_API_TOKEN=dummy-token
          export PINNACLE_USERNAME=dummy-user
          export PINNACLE_PASSWORD=dummy-pass
          uv run nflreadpy-betting validate-config --config config/betting.yaml

      - name: Exercise ingestion path with layered config
        run: |
          export NFLREADPY_BETTING__ingestion__storage_path="$RUNNER_TEMP/odds.sqlite3"
          uv run nflreadpy-betting ingest --config config/betting.yaml --interval 0

      - name: Run tests with coverage
        run: |
          uv run pytest --cov --cov-report=xml --cov-report=html --cov-report=term-missing tests -vv

      - name: Upload coverage XML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload coverage HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-${{ matrix.os }}-${{ matrix.python-version }}
          path: htmlcov

  docs:
    runs-on: ubuntu-latest

    name: docs (3.10)

    env:
      UV_PYTHON: "3.10"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "0.8.17"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Build documentation
        run: uv run mkdocs build --strict

  docker-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: cpu
            file: Dockerfile.cpu
          - name: gpu
            file: Dockerfile.gpu

    steps:
      - uses: actions/checkout@v4

      - name: Build ${{ matrix.name }} image
        run: docker build -f ${{ matrix.file }} --target runtime -t nflreadpy-betting:${{ matrix.name }} .
