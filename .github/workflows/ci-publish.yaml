# Workflow derived from https://docs.astral.sh/uv/guides/integration/github/

on:
  release:
    types: [published]
  workflow_dispatch:

name: Publish package to PyPI

jobs:
  ci-publish:
    runs-on: ubuntu-latest

    name: Upload to PyPI

    env:
      UV_PYTHON: "3.10"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "0.8.17"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run build
        run: uv build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  docker-images:
    name: Build and publish container images
    runs-on: ubuntu-latest
    needs: ci-publish
    if: github.event_name == 'release'
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - variant: cpu
            file: Dockerfile.cpu
            platforms: linux/amd64,linux/arm64
          - variant: gpu
            file: Dockerfile.gpu
            platforms: linux/amd64

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            suffix=-${{ matrix.variant }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.vendor=nflverse
            variant=${{ matrix.variant }}

      - name: Build and push ${{ matrix.variant }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platforms }}
          cache-from: type=gha,scope=${{ matrix.variant }}
          cache-to: type=gha,scope=${{ matrix.variant }},mode=max
